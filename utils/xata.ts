// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from '@xata.io/client'
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client'

const tables = [
  {
    name: 'prompts',
    columns: [
      { name: 'prompt', type: 'string', unique: true },
      { name: 'is_daily', type: 'bool', notNull: true, defaultValue: 'false' },
    ],
  },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Prompts = InferredTypes['prompts']
export type PromptsRecord = Prompts & XataRecord

export type DatabaseSchema = {
  prompts: PromptsRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL:
    'https://Thoughtnaut-Workspace-1000av.us-east-1.xata.sh/db/session',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
  if (instance) return instance

  instance = new XataClient()
  return instance
}
